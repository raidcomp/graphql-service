scalar Time

type User {
  id: ID!
  login: String!
  email: String!
  createdTime: Time!
  updatedTime: Time!
}

type Query {
  user(id: ID, login: String): User
}

input LoginUserInput {
  id: ID!
}

input CreateUserInput {
  login: String!
  email: String!
}

input RefreshTokenInput {
  token: String!
}

type CreateUserPayload {
  user: User
  error: CreateUserPayloadError
}

type CreateUserPayloadError {
  loginTaken: Boolean!
  loginInvalid: Boolean!
}

type Mutation {
  createUser(input: CreateUserInput!): CreateUserPayload!
  loginUser(input: LoginUserInput!): User!
  refreshToken(input: RefreshTokenInput!): User!
}